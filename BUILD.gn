import("opencamera.gni")

group("default") {
  testonly = true
  deps = [
    ":opencamera",
    "app",
    "//third_party/onvif_srvd",
    "//third_party/openssl",
  ]

  #  deps += [ "examples" ]
  if (avp_include_test) {
    deps += [ "test" ]
  }
}

config("library_impl_config") {
  defines = [ "OC_LIBRARY_IMPL" ]
}

config("common_inherited_config") {
  defines = []
  configs = []
  ldflags = []

  if (oc_enable_ffmpeg) {
    defines += [ "OC_FFMPEG" ]
  }

  if (oc_enable_ffmpeg_demuxer) {
    defines += [ "OC_FFMPEG_DEMUXER" ]
  }

  if (oc_enable_ffmpeg_decoder) {
    defines += [ "OC_FFMPEG_DECODER" ]
  }
}

config("no_exit_time_destructors") {
  if (is_clang) {
    cflags = [ "-Wno-exit-time-destructors" ]
  }
}

config("no_global_constructors") {
  if (is_clang) {
    cflags = [ "-Wno-global-constructors" ]
  }
}

config("oc_prod_config") {
  if (is_clang) {
    cflags = [
      "-Wexit-time-destructors",
      "-Wglobal-constructors",
    ]
  }
}

config("common_config") {
  cflags = []
  cflags_c = []
  cflags_cc = []
  cflags_objc = []
  defines = []
}

oc_library("opencamera") {
  testonly = true
  sources = []

  defines = []
  deps = []

  deps += [
    "//app:oc",
    "//base",
    "//common",
    "//onvif",
    "//rtsp",
    "//third_party/inih",
    "//third_party/onvif_srvd:onvif_srv",
    "//third_party/openssl:libssl_static",
    "//third_party/rtsp_server",
  ]
}
